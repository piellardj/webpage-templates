@import 'common/colors';
@import 'common/utils';

$checkbox-size: 20px;
$checkbox-vertical-padding: 3px;

$checkbox-border-width: 2px;
$checkbox-border-radius: 2px;

$checkmark-width: 3px;
$checkmark-color: $color-block-background;

$checkbox-transition: .1s ease-in-out;

// sass-lint:disable-block no-mergeable-selectors
.checkbox {
    display: block;
    position: relative;
    text-align: left;
    @include user-select(none);

    & > input[type=checkbox] {
        width: 1px;
        height: 1px;
        opacity: 0;

        & + label.checkmark,
        & + label.checkmark-line {
            margin-left: $checkbox-size + 4px;
            line-height: 26px;
            cursor: pointer;
        }

        &:disabled {
            & + label.checkmark,
            & + label.checkmark-line {
                cursor: default;
            }
        }
    }
}

@mixin checkmark-transform($scale) {
    @include transform(translate(0, -0.05*$checkbox-size) scale($scale) rotate(45deg));
}

$checkmark-length-right: 0.7 * $checkbox-size;
$checkmark-length-left: 0.35 * $checkbox-size;

// label.checkmark::before: box
// label.checkmark::after: mark;
.checkbox {
    & > input[type=checkbox] {
        & + label.checkmark::before {
            position: absolute;
            top: calc(0.5*(100% - #{$checkbox-size}));
            left: 0;
            width: $checkbox-size;
            height: $checkbox-size;
            border-width: $checkbox-border-width;
            border-style: solid;
            border-radius: $checkbox-border-radius;
            background: none;
            content: '';

            @include box-sizing(border-box);
            // @include transition($checkbox-transition);  
        }

        & + label.checkmark::after {
            position: absolute;
            top: calc(0.5*(100% - #{$checkbox-size}) + 0.5 * (#{$checkbox-size} - #{$checkmark-length-right}));
            right: 0;
            bottom: 0;
            left: 0.5 * ($checkbox-size - $checkmark-length-left);
            width: $checkmark-length-left;
            height: $checkmark-length-right;
            border: solid $checkmark-color;
            border-width: 0 $checkmark-width $checkmark-width 0;
            background: none;
            content: '';

            @include box-sizing(border-box);
            // @include transition($checkbox-transition);
            @include checkmark-transform(0);
        }

        &:checked + label.checkmark::after {
            @include checkmark-transform(1);
        }

        // COLORS
        & {
            & + label.checkmark::before {
                border-color: $color-control-accent;
            }

            &:checked + label.checkmark::before {
                background: $color-control-accent;
            }
        }

        &:hover,
        &:focus {
            & + label.checkmark::before {
                border-color: $color-control-accent-hover;
            }

            &:checked + label.checkmark::before {
                background: $color-control-accent-hover;
            }
        }

        &:active {
            & + label.checkmark::before {
                border-color: $color-control-accent-active;
            }

            &:checked + label.checkmark::before {
                background: $color-control-accent-active;
            }
        }

        &:disabled {
            & + label.checkmark::before {
                border-color: $color-control-disabled;
            }

            &:checked + label.checkmark::before {
                background: $color-control-disabled;
            }
        }
    }
}
