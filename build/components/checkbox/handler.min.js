var Page;!function(e){!function(t){var r,n,o=function(){function e(e){var t=this;this.observers=[],this.id=e.id,this.element=e,this.reloadValue(),this.element.addEventListener("change",function(){t.reloadValue(),n.storeState(t);for(var e=0,r=t.observers;e<r.length;e++){(0,r[e])(t.checked)}})}return Object.defineProperty(e.prototype,"checked",{get:function(){return this._checked},set:function(e){this.element.checked=e,this.reloadValue()},enumerable:!1,configurable:!0}),e.prototype.reloadValue=function(){this._checked=this.element.checked},e}();!function(e){var t;e.getCheckboxById=function(r){return e.load(),t[r]||null},e.load=function(){void 0===t&&(t=function(){for(var e={},t=document.querySelectorAll("div.checkbox > input[type=checkbox][id]"),r=0;r<t.length;r++){var n=new o(t[r]);e[n.id]=n}return e}())}}(r||(r={})),function(t){var n="checkbox",o="true",c="false";t.storeState=function(t){var r=t.checked?o:c;e.Helpers.URL.setQueryParameter(n,t.id,r)},t.applyStoredState=function(){e.Helpers.URL.loopOnParameters(n,function(t,a){var i=r.getCheckboxById(t);!i||a!==o&&a!==c?(console.log("Removing invalid query parameter '"+t+"="+a+"'."),e.Helpers.URL.removeQueryParameter(n,t)):i.checked=a===o})}}(n||(n={})),e.Helpers.Events.callAfterDOMLoaded(function(){r.load(),n.applyStoredState()}),t.addObserver=function(e,t){var n=r.getCheckboxById(e);return!!n&&(n.observers.push(t),!0)},t.setChecked=function(e,t){var n=r.getCheckboxById(e);n&&(n.checked=t)},t.isChecked=function(e){var t=r.getCheckboxById(e);return!!t&&t.checked}}(e.Checkbox||(e.Checkbox={}))}(Page||(Page={}));